import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { MouseEventHandler, useEffect } from "react";
import { PatientTrackerPage, TimelineFormData } from "../../components";
import {
  useLocationTypesQuery,
  usePatientMutation,
  usePatientQuery,
  usePatientsQuery,
  useTimelineQuery,
} from "../../hooks";
import { useTimelineMutation } from "../../hooks/useTimelineMutation";

const PatientDetailNextPage: NextPage = (props) => {
  const router = useRouter();
  const { id: patientId } = router.query;

  const patientsQuery = usePatientsQuery();
  const patientQuery = usePatientQuery(patientId as string);
  const { addPatient, updatePatient, deletePatient } = usePatientMutation();
  const timelineQuery = useTimelineQuery(patientId as string)
  const { addTimeline, removeTimeline } = useTimelineMutation()
  const locationTypesQuery = useLocationTypesQuery()

  const { patients = [] } = patientsQuery.data ?? {};
  const { patient: selectedPatient } = patientQuery.data ?? {};
  const { timelines = [] } = timelineQuery.data ?? {}
  const { locationTypes } = locationTypesQuery.data ?? {}

  const handleAddPatient = async (data: any) => {
    await addPatient(data);
    await patientsQuery.refetch();
  };

  const handleDeletePatient = async (data: any) => {
    await deletePatient(data);
    await patientsQuery.refetch();
    router.push("/");
  };

  const handleUpdatePatient = async (data: any) => {
    await updatePatient(data);
    await patientsQuery.refetch();
  };

  const handleRemoveTimeline = async (id: string) => {
    await removeTimeline({ id })
    await timelineQuery.refetch()
  }

  const handleAddTimeline = async (data: any) => {
    console.log(data)
    await addTimeline({ data: {...data, patienceId: patientId} })
    await timelineQuery.refetch()
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PatientTrackerPage
        patients={patients}
        selectedPatient={selectedPatient}
        addPatient={handleAddPatient}
        deletePatient={handleDeletePatient}
        updatePatient={handleUpdatePatient}
        timelines={timelines}
        onTimelineDelete={handleRemoveTimeline}
        onTimelineSubmit={handleAddTimeline}
        locationTypes={locationTypes}
      />
    </div>
  );
};

export default PatientDetailNextPage;
